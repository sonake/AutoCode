package ${package}.${moduleName}.controller;

import java.util.Map;

import com.alibaba.fastjson.JSON;
import com.baomidou.mybatisplus.core.toolkit.StringPool;
import com.sonake.common.annotation.Log;
import com.sonake.common.controller.BaseController;
import com.sonake.common.domain.QueryRequest;
import com.sonake.common.exception.FebsException;
import ${package}.${moduleName}.entity.${className};
import ${package}.${moduleName}.service.${className}Service;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;


/**
 * ${comments}
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@Slf4j
@RestController
@RequestMapping("${moduleName}/${pathName}")
public class ${className}Controller extends BaseController {
    @Autowired
    private ${className}Service ${classname}Service;

    /**
     * 列表
     */
    @RequestMapping(method = RequestMethod.GET)
    @ApiResponses({@ApiResponse(code = 200, message = "请求成功")})
    @ApiOperation(value = "查询 ${className}列表" , notes = "查询${className}列表")
    public Map<String, Object> list(QueryRequest queryRequest, ${className} entity) {
        log.info(JSON.toJSONString(entity));
        return getDataTable(${classname}Service.findAll(entity, queryRequest));
    }

    /**
     * 保存
     */
    @ApiResponses({@ApiResponse(code = 200, message = "新增成功")})
    @ApiOperation(value = "新增 ${className}" , notes = "新增${className}")
    @Log("新增${className}信息")
    @RequestMapping(method = RequestMethod.POST)
    public void save(@RequestBody ${className} entity) throws FebsException {
        log.info(JSON.toJSONString(entity));
        try {
            this.${classname}Service.createOrUpdate${classname}(entity);
        } catch (Exception e) {
            String message = "新增${classname}失败";
            log.error(message, e);
            throw new FebsException(message);
        }
    }

    /**
     * 修改
     */
    @ApiResponses({@ApiResponse(code = 200, message = "修改成功")})
    @ApiOperation(value = "修改 ${className}" , notes = "新增${className}")
    @Log("修改${className}信息")
    @RequestMapping(method = RequestMethod.PUT)
    public void update(@RequestBody ${className} entity) throws FebsException{
        log.info(JSON.toJSONString(entity));
        try {
            this.${classname}Service.createOrUpdate${classname}(entity);
        } catch (Exception e) {
            String message = "新增${classname}失败";
            log.error(message, e);
            throw new FebsException(message);
        }
    }

    /**
     * 删除
     */
    @ApiResponses({@ApiResponse(code = 200, message = "删除成功")})
    @ApiOperation(value = "删除 ${className}" , notes = "删除 ${className}")
    @Log("删除${className}信息")
    public void delete(@RequestBody ${className} entity) throws FebsException {
        try {
            String[] ids = entity.getIds().split(StringPool.COMMA);
            this.${classname}Service.delete(ids);
        } catch (Exception e) {
            String message = "删除部门失败";
            log.error(message, e);
            throw new FebsException(message);
        }
    }

}
