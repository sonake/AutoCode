package ${package}.${moduleName}.service.impl;

import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.sonake.common.domain.QueryRequest;
import com.sonake.common.utils.SortUtil;
import ${package}.${moduleName}.entity.${className};
import ${package}.${moduleName}.mapper.${className}Mapper;
import ${package}.${moduleName}.service.${className}Service;
import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
import org.apache.commons.lang3.StringUtils;
import org.springframework.stereotype.Service;

import java.util.Date;

/**
 * ${comments}
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@Service("${classname}Service")
public class ${className}ServiceImpl extends ServiceImpl<${className}Mapper, ${className}> implements ${className}Service {

    @Override
    public IPage<${className}> findAll(${className} entity, QueryRequest request) {
        try {
            LambdaQueryWrapper<${className}> queryWrapper = new LambdaQueryWrapper<>();
            Page<${className}> page = new Page<>();
            SortUtil.handlePageSort(request, page, true);
            return this.page(page,queryWrapper);
        } catch (Exception e) {
            log.error("获取${className}信息列表失败", e);
            return null;
        }
    }

    @Override
    public void createOrUpdate${className}(${className} entity) {
        entity.setCreateDate(new Date());
        entity.setCreateBy(1);
        entity.setDelFlag(1);
        this.saveOrUpdate(entity);
    }


    @Override
    public void delete(String[] ids) {
        this.delete(ids);
    }

}